library(GMCImpute)
GMC.mcmc
library(ggplot2)
library(gridExtra)
library(purrr)
?GMC.mcmc
library(GMCImpute)
?GMC.mcmc
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
library(purrr)
set.seed(47)
num= 500
X1<-rnorm(num)
X2<- rpois(num,5*abs(X1))
X3<- as.factor(rbernoulli(num,pnorm(-.5+scale(X2))))
X<- data.frame(X1,X2,X3)
R = t(sapply(1:num, function(x)rbernoulli(2, p = pnorm(-.5 + .5*abs(X1[x]))))) # missingness mechanism
X_noMis = X
X[which(R[,1] == T),2] = NA
X[which(R[,2] == T),3] = NA
grid.arrange(ggplot(X_noMis, aes(x = X1, y = X2, color = X3))+
geom_point() +
ggtitle("No Missing Data")+
xlab(expression(X[1]))+
ylab(expression(X[2]))+
scale_color_discrete(name = expression(X[3]),
labels = c(0,1))+
theme(axis.text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 14, face = "bold"),
legend.title= element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold")),
ggplot(X, aes(x = X1, y = X2, color = X3))+
geom_point() +
ggtitle('Missing Data')+
xlab(expression(X[1]))+
ylab(expression(X[2]))+
scale_color_discrete(name = expression(X[3]),
labels = c(0,1))+
theme(axis.text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 14, face = "bold"),
legend.title= element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold")))
plot(ecdf(X_noMis[,2]),
xlab = expression(X[2]),
main = "ECDF of X2 Comparison", cex.lab =1.5,
cex.main = 2.4)
lines(ecdf(X[,2]), lty = 1,col = 2)
legend("bottomright", c('No Missing Data','Missing Data'),
col = 1:2,
pch = 1,
cex = 1,
text.font=2)
hyperparams = list(delta = 10,
k.star = 2,
plugin.threshold = 100,
a_alpha = 1,
b_alpha = 3,
nu_mix = 4,
kappa_0 = .001,
nu = 3,
a1 = 2,
a2 = 3,
a.sigma = 1,
b.sigma = .3,
D_0 = diag(1,2))
mcmc<-GMC.mcmc(Data = X, nImp = 5,hyperparams = hyperparams, burn = 1500,nsamp = 2000, seed = 47)
ggplot(mcmc$Imputations[[5]], aes(x = X1, y = X2, color = X3))+
geom_point()+
scale_x_continuous(limits = c(-3,3))+
xlab(expression(X[1]))+
ylab(expression(X[2]))+
ggtitle("Example Imputation")+
scale_color_discrete(name = expression(X[3]),
labels = c(0,1))+
theme(axis.text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 14, face = "bold"),
legend.title= element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"))
par(mar = c(5,6,4,2))
range = range(mcmc$Support[[3]][1,(2:dim(mcmc$Support[[3]])[2])]) # get support
quantiles = mcmc$Quantiles[[3]] #get quantiles
plot(range[1]:range[2],quantiles[1,2:(range[2]+2)],
col = "gray",
type = 'b',
xlab = expression(X[2]),
ylab = expression(P(X[2] <= x)),
main = "Posterior Samples of F_X2",
cex.lab = 1.5,
cex.main = 2)
sapply(2:500,function(x)points(range[1]:range[2],quantiles[x,2:(range[2]+2)], col ='gray', type = 'b'))
lines(ecdf(X_noMis$X2), cex = 2)
points(range[1]:range[2],colMeans(quantiles[2:500,2:(range[2]+2)]),pch =2, cex = 2)
lines(ecdf(X$X2), col = 2, cex = 2)
legend("bottomright",c("ECDF w/o Mis","ECDF w/ Mis","Posterior Mean"), pch = c(16,16,2),col = c(1,2,1),bty = 'n', cex = 1.3, text.font = 2)
#get predictive data sets
pred<- get_predictive_Y(mcmc, # GMC mcmc object
nobs = dim(X)[1], # number of observations in predictive data set; we use n = dim(X)[1]
nsets = 2, # number of predictive data sets to create
seed = 10)
#plot results
grid.arrange(ggplot(pred$Y_pred[[1]], aes(x = X1, y = X2, color = X3))+
geom_point() +
ggtitle("Posterior Predictive Data Set #1")+
xlab(expression(X[1]))+
ylab(expression(X[2]))+
scale_color_discrete(name = expression(X[3]),
labels = c(0,1))+
theme(axis.text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 14, face = "bold"),
legend.title= element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold")),
ggplot(pred$Y_pred[[2]], aes(x = X1, y = X2, color = X3))+
geom_point() +
ggtitle("Posterior Predictive Data Set #2")+
xlab(expression(X[1]))+
ylab(expression(X[2]))+
scale_color_discrete(name = expression(X[3]),
labels = c(0,1))+
theme(axis.text = element_text(size = 12, face = "bold"),
axis.title = element_text(size = 14, face = "bold"),
legend.title= element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold")), ncol = 1)
library(GMCImpute)
library(GMCImpute)
library(GMCImpute)
library(GMCImpute)
roxygen2::roxygenise().
roxygen2::roxygenise()
